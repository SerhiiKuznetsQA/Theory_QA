1. Что подразумевается под тестовой средой?
 Среда тестирования — это настройка программного и аппаратного обеспечения для групп тестирования для выполнения тестовых случаев. Другими словами, он поддерживает выполнение теста с настроенным оборудованием, программным обеспечением и сетью.
Испытательный стенд или тестовая среда настраиваются в соответствии с требованиями тестируемого приложения. В некоторых случаях испытательный стенд может представлять собой комбинацию тестовой среды и тестовых данных, которые он использует.
Настройка правильной среды тестирования гарантирует успех тестирования программного обеспечения. Любые недостатки в этом процессе могут привести к дополнительным затратам и времени для клиента.

2. В чем отличие build от release?
Билд- это сборки исходных кодов ,которые команда разработчиков преобразует в автономную или исполняймую форму и передает на тестирование команде тестировшиков которые 
в своб очередь проверяют на наличие соответствия требованиям и проводят проверку функционала данного билда
Релиз - это сборка которую команда тестирования передает команде клиента

3. Основные фазы тестирования?

Необходимость проведения тестирования в несколько этапов определяется тем, что разные типы ошибок проще всего обнаруживаются на разных этапах. Основными фазами тестирования являются:

– модульное тестирование;
– интеграционное тестирование;
– системное тестирование (в том числе адаптационное, функциональное и нагрузочное);
– регрессионное тестирование;
– приемочное тестирование.
На стадии модульного тестирования достаточно просто выявляются просчеты в логике построения модуля и/или реализации алгоритмов, ошибки, связанные с неправильным использованием локальных ресурсов, а также ошибки в локальных переменных.

Следующим этапом явлется интеграционное тестирование. Оно проходит в несколько стадий и заключается в тестировании частей системы, состоящих из двух и большего количества модулей. На стадии интеграционного тестирования ошибки управления потоком, ошибки в передаче и/или интерпредтации данных, использовании ресурсов, средств коммуникации.

Третьим этапом является системное тестирование, которое существенным образом отличается от модульного и интеграционного. Оно рассматривает систему как черный ящик и работает исключительно с пользовательскими интерфейсами. Основной целью системного тестирования является проверка стабильности и корректности работы системы, а также соответствия функциональностей системы спецификациям, указанным в сопроводительных документах, проверяется работы системы на базе различных операционных систем и аппаратного обеспечения. Исследуется производительность тестируемого программного обеспечения.

Основной целью регрессионного тестирования является проверка того, что в результате внесения изменений в программный код зафиксированные ранее ошибки исправлены, а новые не появляются. Для регрессионного тестирования используется специально разработанный набор тестов, из которого каждый раз выбираются те тесты, которые позволяют обнаружить появление новых ошибок с наибольшей вероятностью.

Приемочное тестирование — тестирование интегральной функциональности системы на соответствие требованиям заказчика. Планируется с участием представителей заказчика. Проводится на заключительном этапе с целью удостовериться в том, что система работает так, как и ожидалось, все необходимые формы, процедуры присутствуют и функционируют нормально. Данное тестирование является высокоуровневой проверкой отсутствия пробелов в функциональности системы.

Положительные результаты бизнес-тестирования означают, что все компоненты системы работоспособны и включены в данную версию продукта.
4. Что такое импакт анализ?
Импакт анализом являеться указание затронутых мест в проекте при внедрении новой или изменении старой функциональности.
5. Критерии выбора тестов?
· В любой нетривиальной программе на любой стадии ее готовности содержатся необнаруженные ошибки
· Продолжительность тестирования – технико-экономическая проблема: компромисс между временем и полнотой. Поэтому нужно возможно меньшее количество хороших тестов с желательными свойствами:
- Детективность: тест должен с большой вероятностью обнаруживать возможные ошибки.
-Покрывающая способность: один тест должен выявлять как можно больше ошибок.
 -Воспроизводимость: ошибка должна выявляться независимо от изменяющихся условий (например, от временных соотношений) – это трудно достижимо для время-зависимых программ, реультаты которых часто невоспроизводимы.
Это благие пожелания; для направленного выбора руководствуются критериями выбора тестов. Критерий должен показать, когда некоторое конечное множество тестов достаточно для проверки программы с некоторой полнотой.
Два вида критериев:
-Функциональные – если тесты составляются исходя из спецификации программы (тестирование черного ящика). Проверяется правильность выполнения программой всех ее заданных функций. Именно этим критериям в основном и следуют при независимом тестировании.
-Структурные – если тесты составляются исходя из текста программы (тестирование прозрачного ящика). Проверяется правильность работы при прохождении всех участков кода. Эту работу программисты выполняют постоянно в ходе разработки.

6. Принципы тестирования?
7. Что такое независимое тестирование?
8. Что такое тестирование со сдвигом влево?
9. Почему тестирование делится на отдельные этапы?
10. Какие есть этапы тестирования?
11. Как вы тестируете продукт, если требования еще не зафиксированы?
12. Как вы узнаете, было ли создано достаточно тестов для тестирования продукта?
13. Что подразумевается под тестовыми данными? 
14. Что такое бета-тестирование?
15. Что означает пилотное тестирование? (Pilot)
16. В чем отличие build от release?
17. Что такое бизнес – логика?
18. Какие существуют основные виды тестирования ПО?
19. Методы тестирования?
20. Что такое пирамида / уровни тестирования?
21. Что такое деструктивное/разрушающее/негативное тестирование? (DT — Destructive testing)
22. Что такое недеструктивное/неразрушающее/позитивное тестирование? (NDT – Non Destructive testing)
23. Что подразумевается под компонентным/модульным/юнит тестированием? (Component/Module/Unit testing)
24. Что подразумевается под интеграционным тестированием?
25. Разница между Unit testing и Integration testing?
26. Что такое системное интеграционное тестирование? (SIT — System Integration testing) 
27. В чем разница между тест-драйвером и тест-заглушкой? (Test Driver and Test Stub)
28. Что подразумевается под системным тестированием?
29. Что такое функциональное тестирование?
30. Что такое тестирование совместимости/взаимодействия? (Compatibility/Interoperability testing)
31. Что такое тестирование на соответствие? (Conformance/Compilance testing)
32. Что такое нефункциональное тестирование?
33. Что вы знаете о Тестировании удобства пользования?
34. Отличия тестирование на удобство пользования и тестирования доступности? (Usability Vs. Accessibility testing)
35. Что такое тестирование интерфейса?
36. Что такое тестирование рабочего процесса/воркфлоу? (Workflow testing)
37. Что вы знаете о пользовательском приемочном тестировании? (UAT – User Acceptance testing)
38. Что такое эксплуатационное приемочное тестирование? (OAT — Operational Acceptance testing)
39. Что такое инсталляционное тестирование?
40. Что вы знаете о тестировании безопасности?
41. Что такое конфигурационное тестирование?
42. Объясните, что такое тестирование N+1
43. Что вы знаете о тестировании сборки? (Build Verification Test)
44. Что такое тестирование потоков? (Thread testing)
45. Что вы знаете о мутационном тестировании? (Mutation testing)
46. Что вы знаете о мутационном тестировании? (Mutation testing)
47. В чем разница между Baseline и Benchmark testing?
48. Что такое A/B тестирование?
49. Что означает сквозное тестирование? (E2E — End–to–End)
50. В чем разница между E2E и системным тестированием?
51. Что такое параллельное тестирование? (Parallel testing)
52. Чем AdHock тестирование отличается от Исследовательского тестирования?
53.
